import { motion, AnimatePresence } from "framer-motion";
import { useState, useEffect } from "react";
import { Star, Quote, ChevronLeft, ChevronRight, Briefcase, TrendingUp } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";

const testimonials = [
  {
    id: 1,
    name: "Sarah Chen",
    role: "Software Engineer",
    company: "Google",
    image: "https://images.unsplash.com/photo-1494790108755-2616b612b786?w=400&h=400&fit=crop&crop=face",
    content: "IntervuIQ's AI-powered feedback helped me identify exactly what I was missing in my technical interviews. Landing my dream job at Google felt impossible until I started using this platform.",
    rating: 5,
    outcome: "Landed dream job in 3 weeks"
  },
  {
    id: 2,
    name: "Marcus Rodriguez",
    role: "Product Manager", 
    company: "Microsoft",
    image: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400&h=400&fit=crop&crop=face",
    content: "The resume gap analysis was a game-changer. I never realized how many ATS-friendly keywords I was missing. The personalized suggestions helped me get 3x more callbacks.",
    rating: 5,
    outcome: "3x more interview callbacks"
  },
  {
    id: 3,
    name: "Priya Sharma",
    role: "Data Scientist",
    company: "Meta",
    image: "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=400&h=400&fit=crop&crop=face",
    content: "The question bank with detailed explanations saved me weeks of preparation time. I walked into every interview confident and prepared, thanks to the comprehensive practice materials.",
    rating: 5,
    outcome: "Saved 40+ hours of prep time"
  },
  {
    id: 4,
    name: "David Kim",
    role: "Frontend Developer",
    company: "Amazon",
    image: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=400&fit=crop&crop=face",
    content: "The cold email templates generated by AI were incredibly effective. I reached out to 15 recruiters and got responses from 12 of them. The personalization was spot-on.",
    rating: 5,
    outcome: "80% recruiter response rate"
  },
  {
    id: 5,
    name: "Emily Johnson",
    role: "UX Designer",
    company: "Apple",
    image: "https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400&h=400&fit=crop&crop=face",
    content: "Tracking my interview progress helped me see patterns in my performance. The insights were invaluable for improving my behavioral interview responses.",
    rating: 5,
    outcome: "Improved confidence by 85%"
  }
];

export function TestimonialsSlider() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);

  useEffect(() => {
    if (!isAutoPlaying) return;

    const interval = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % testimonials.length);
    }, 5000);

    return () => clearInterval(interval);
  }, [isAutoPlaying]);

  const nextTestimonial = () => {
    setCurrentIndex((prev) => (prev + 1) % testimonials.length);
    setIsAutoPlaying(false);
  };

  const prevTestimonial = () => {
    setCurrentIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length);
    setIsAutoPlaying(false);
  };

  const goToTestimonial = (index: number) => {
    setCurrentIndex(index);
    setIsAutoPlaying(false);
  };

  return (
    <section className="py-24 bg-gradient-to-b from-muted/20 to-background">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl font-bold mb-4">
            Success Stories from <span className="text-gradient">Real Users</span>
          </h2>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            Discover how job seekers transformed their interview performance and landed their dream jobs
          </p>
        </motion.div>

        <div className="relative max-w-4xl mx-auto">
          {/* Main Testimonial Card */}
          <div className="relative h-96 overflow-hidden">
            <AnimatePresence mode="wait">
              <motion.div
                key={currentIndex}
                initial={{ opacity: 0, x: 300 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -300 }}
                transition={{ duration: 0.5, ease: "easeInOut" }}
                className="absolute inset-0"
              >
                <Card className="h-full p-8 bg-gradient-to-br from-card via-card to-primary/5 border-primary/20">
                  <div className="flex flex-col h-full">
                    <div className="flex items-start gap-6 mb-6">
                      <div className="relative">
                        <img
                          src={testimonials[currentIndex].image}
                          alt={testimonials[currentIndex].name}
                          className="w-16 h-16 rounded-full object-cover ring-2 ring-primary/20"
                        />
                        <div className="absolute -bottom-1 -right-1 w-6 h-6 bg-success rounded-full flex items-center justify-center">
                          <Briefcase className="w-3 h-3 text-white" />
                        </div>
                      </div>
                      
                      <div className="flex-1">
                        <div className="flex items-center gap-2 mb-1">
                          <h3 className="font-semibold text-lg">{testimonials[currentIndex].name}</h3>
                          <div className="flex gap-1">
                            {[...Array(testimonials[currentIndex].rating)].map((_, i) => (
                              <Star key={i} className="w-4 h-4 fill-amber-400 text-amber-400" />
                            ))}
                          </div>
                        </div>
                        <p className="text-sm text-muted-foreground">
                          {testimonials[currentIndex].role} at {testimonials[currentIndex].company}
                        </p>
                        <div className="inline-flex items-center gap-1 mt-2 px-2 py-1 bg-success/10 text-success text-xs rounded-full">
                          <TrendingUp className="w-3 h-3" />
                          {testimonials[currentIndex].outcome}
                        </div>
                      </div>
                      
                      <Quote className="w-8 h-8 text-primary/30" />
                    </div>
                    
                    <blockquote className="flex-1 text-lg leading-relaxed text-foreground">
                      "{testimonials[currentIndex].content}"
                    </blockquote>
                  </div>
                </Card>
              </motion.div>
            </AnimatePresence>
          </div>

          {/* Navigation Controls */}
          <div className="flex items-center justify-between mt-8">
            <Button
              variant="outline"
              size="sm"
              onClick={prevTestimonial}
              className="gap-2"
            >
              <ChevronLeft className="w-4 h-4" />
              Previous
            </Button>

            {/* Dot Indicators */}
            <div className="flex gap-2">
              {testimonials.map((_, index) => (
                <button
                  key={index}
                  onClick={() => goToTestimonial(index)}
                  className={`w-3 h-3 rounded-full transition-all ${
                    index === currentIndex 
                      ? "bg-primary scale-125" 
                      : "bg-muted-foreground/30 hover:bg-muted-foreground/50"
                  }`}
                />
              ))}
            </div>

            <Button
              variant="outline"
              size="sm"
              onClick={nextTestimonial}
              className="gap-2"
            >
              Next
              <ChevronRight className="w-4 h-4" />
            </Button>
          </div>

          {/* Auto-play indicator */}
          <div className="text-center mt-4">
            <button
              onClick={() => setIsAutoPlaying(!isAutoPlaying)}
              className="text-xs text-muted-foreground hover:text-foreground transition-colors"
            >
              {isAutoPlaying ? "Pause auto-play" : "Resume auto-play"}
            </button>
          </div>
        </div>
      </div>
    </section>
  );
}